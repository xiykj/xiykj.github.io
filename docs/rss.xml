<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>凡是過往；皆為序章</title><link>https://xiykj.github.io</link><description>不积跬步无以至千里；不积小流无以成江海。</description><copyright>凡是過往；皆為序章</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/164145440?s=48&amp;v=4</url><title>avatar</title><link>https://xiykj.github.io</link></image><lastBuildDate>Thu, 15 Aug 2024 02:45:13 +0000</lastBuildDate><managingEditor>凡是過往；皆為序章</managingEditor><ttl>60</ttl><webMaster>凡是過往；皆為序章</webMaster><item><title>word无法插入页码</title><link>https://xiykj.github.io/post/word-wu-fa-cha-ru-ye-ma.html</link><description>　　今天，在工作的时候用户突然说她的word文档无法插入页码，我过去现场查看果然如此，报错信息如下：&#13;
![1](https://img2020.cnblogs.com/blog/2034475/202012/2034475-20201209130921991-227557230.png)&#13;
　　&#13;
　　查询资料都指向页码模板文件损坏，现在只有重新添加新的模板文件，具体操作指南---&gt;打开word文档/文件/word选项/加载项/ 在“管理”项中选择“模板”项，点击“转到”---“添加”，添加模板文件“C:/用户名/AppData/Roaming/Microsoft/Document Building Blocks/2052/Building Blocks.dotx”文件即可&#13;
![2](https://img2020.cnblogs.com/blog/2034475/202012/2034475-20201209130941903-1273441994.png)&#13;
&#13;
　　再次试一下插入页码ok，问题解决！ 。</description><guid isPermaLink="true">https://xiykj.github.io/post/word-wu-fa-cha-ru-ye-ma.html</guid><pubDate>Thu, 15 Aug 2024 02:44:45 +0000</pubDate></item><item><title>Linux有趣的应用，画只小猫陪伴你</title><link>https://xiykj.github.io/post/Linux-you-qu-de-ying-yong-%EF%BC%8C-hua-zhi-xiao-mao-pei-ban-ni.html</link><description>## Liunx中无聊了，画只小猫陪伴着你&#13;
![1](https://img2020.cnblogs.com/blog/2034475/202006/2034475-20200609155416163-752228524.png)&#13;
　　&#13;
　　安装oneko：&#13;
　　`sudo apt-get install oneko`&#13;
&#13;
　　安装完成后，在命令终端输入：&#13;
&#13;
　　1.oneko&#13;
&#13;
　　　　在桌面出现一只可爱的小猫，并且始终追随着鼠标光标，按下 ctrl+c 终止进程结束&#13;
&#13;
　　2.oneko -tora&#13;
&#13;
　　　　一只背上有条纹的老虎猫&#13;
&#13;
　　3.oneko -dog&#13;
&#13;
　　　　一只像狗样的猫儿&#13;
&#13;
　　4.oneko -tomoyo&#13;
&#13;
　　　　头戴樱花的猫儿&#13;
&#13;
　　5.oneko -sakura&#13;
&#13;
　　　　小女孩样式猫&#13;
![2](https://img2020.cnblogs.com/blog/2034475/202006/2034475-20200609162227188-1109584461.png)&#13;
　　&#13;
　　6.oneko -bg red&#13;
&#13;
　　　　背景为红色&#13;
&#13;
　　7.oneko -fg red　&#13;
&#13;
　　　　前景为红色　&#13;
&#13;
　　8.oneko &amp;&#13;
&#13;
　　　　以后台进程显示&#13;
&#13;
　　9.ctrl+c&#13;
&#13;
　　　　结束oneko，无法结束以后台进程运行的oneko&#13;
&#13;
　　10.kill %1&#13;
&#13;
　　　　结束后台第一个运行的进程&#13;
![3](https://img2020.cnblogs.com/blog/2034475/202006/2034475-20200609162411192-427960761.png)&#13;
&#13;
　　也可以直接用进程号结束，比如 kill 9009。</description><guid isPermaLink="true">https://xiykj.github.io/post/Linux-you-qu-de-ying-yong-%EF%BC%8C-hua-zhi-xiao-mao-pei-ban-ni.html</guid><pubDate>Thu, 15 Aug 2024 02:42:37 +0000</pubDate></item><item><title>树梅派安装截图工具</title><link>https://xiykj.github.io/post/shu-mei-pai-an-zhuang-jie-tu-gong-ju.html</link><description># Linux截图工具scrot&#13;
## 安装命令：&#13;
```&#13;
sudo apt-get install update　　　　　　更新软件源&#13;
sudo apt-get install scrot　　　　　　安装scrot工具（纯命令行截图工具）&#13;
```&#13;
![1](https://img2020.cnblogs.com/blog/2034475/202012/2034475-20201209134243552-806428485.png)&#13;
&#13;
### 截图工具使用方法：&#13;
&#13;
直接在Linux命令终端输入命令&#13;
　　1.截取整个屏幕，默认名称为日期时间和分辨率，格式是png&#13;
&#13;
　　　　scrot&#13;
&#13;
　　2.指定截图名称&#13;
&#13;
　　　　scrot test.png&#13;
&#13;
　　3.指定文件路径，必须要加上文件名&#13;
&#13;
　　　　scrot /home/pi/music/simple.png&#13;
&#13;
　　4.部份区域需要截图，输入命令后用鼠标拖动需要截图的区域，可以指定路径同上&#13;
&#13;
　　　　scrot -s&#13;
&#13;
　　5.倒计时截图，指定时间后截图（单位：s）&#13;
&#13;
　　　　scrot -d 10&#13;
&#13;
其它命令参数：&#13;
　　　　-h 显示更多帮助&#13;
　　　　-v 获取当前版本&#13;
　　　　-d x 添加X秒的延迟拍摄&#13;
　　　　-c 添加一个倒计时延迟拍摄&#13;
　　　　-s 允许用户用鼠标捕捉特定区域&#13;
　　　　-u 捕捉当前活动窗口&#13;
　　　　-q X 指定图像质量百分率X（默认75）&#13;
　　　　-t X 创建一个百分比大小为X的缩略图&#13;
　　　　-e 在截图后指定一个命令来运行&#13;
　　Linux其它图形截图工具（ubuntu）：&#13;
&#13;
　　`sudo apt-get install shutter`&#13;
![2](https://img2020.cnblogs.com/blog/2034475/202012/2034475-20201209134301988-643681798.png)。</description><guid isPermaLink="true">https://xiykj.github.io/post/shu-mei-pai-an-zhuang-jie-tu-gong-ju.html</guid><pubDate>Thu, 15 Aug 2024 02:39:23 +0000</pubDate></item><item><title>AutoCAD 2016安装成功后打开不跳激活框</title><link>https://xiykj.github.io/post/AutoCAD%202016-an-zhuang-cheng-gong-hou-da-kai-bu-tiao-ji-huo-kuang.html</link><description>电脑重新安装操作系统后，安装autocad 2016过程中未出现错误，打开CAD后显示“许可无效”，首次打开也不跳激活框出来（操作系统版本：Windows 7 Professional X64 SP1/CAD版本：autodesk 2016中文版）。</description><guid isPermaLink="true">https://xiykj.github.io/post/AutoCAD%202016-an-zhuang-cheng-gong-hou-da-kai-bu-tiao-ji-huo-kuang.html</guid><pubDate>Thu, 15 Aug 2024 02:33:57 +0000</pubDate></item><item><title>修改windows远程桌面端口号</title><link>https://xiykj.github.io/post/xiu-gai-windows-yuan-cheng-zhuo-mian-duan-kou-hao.html</link><description>　　对于Windows的远程桌面工具、相信不少IT界的同仁都用过，远程桌面连接用的是微软自己的RDP协议，相比较其它的远程工具，画面质量，显示速率、传输速度那都是要快的多且非常的稳定，但是Windows远程桌面默认的3389端口非常容易被别人远程非法操作，保障不了计算机数据的安全性。</description><guid isPermaLink="true">https://xiykj.github.io/post/xiu-gai-windows-yuan-cheng-zhuo-mian-duan-kou-hao.html</guid><pubDate>Thu, 15 Aug 2024 02:30:18 +0000</pubDate></item><item><title>破解VNC密码</title><link>https://xiykj.github.io/post/po-jie-VNC-mi-ma.html</link><description>VNC由Olivetti &amp; Oracle研究室所开发，此研究室在1999年併入美国电话电报公司（AT&amp;T）。</description><guid isPermaLink="true">https://xiykj.github.io/post/po-jie-VNC-mi-ma.html</guid><pubDate>Thu, 15 Aug 2024 02:21:06 +0000</pubDate></item><item><title>U盘被写保护怎么解除？</title><link>https://xiykj.github.io/post/U-pan-bei-xie-bao-hu-zen-me-jie-chu-%EF%BC%9F.html</link><description>　　有时我们可能会遇到这样的情况：将U盘插入电脑并读写其中的文件时，提示“U盘被写保护”造成无法正常读取文件的尴尬。</description><guid isPermaLink="true">https://xiykj.github.io/post/U-pan-bei-xie-bao-hu-zen-me-jie-chu-%EF%BC%9F.html</guid><pubDate>Thu, 15 Aug 2024 02:03:46 +0000</pubDate></item><item><title>IE 11升级教程</title><link>https://xiykj.github.io/post/IE%2011-sheng-ji-jiao-cheng.html</link><description>微软已停止了IE11以下版本（包括IE10/9/8）的技术支持，以后Win7用IE11的机会也越来越多，但IE11官方安装包的安装是一件很抓狂的事，微软的IE官方包其实并不是离线安装包，安装前需下载必要更新，否则拒绝安装。</description><guid isPermaLink="true">https://xiykj.github.io/post/IE%2011-sheng-ji-jiao-cheng.html</guid><pubDate>Wed, 14 Aug 2024 14:28:57 +0000</pubDate></item><item><title>微信多开程序</title><link>https://xiykj.github.io/post/wei-xin-duo-kai-cheng-xu.html</link><description>有时候想在电脑上登入多个微信帐号，但是怎奈鹅厂开启pc端微信限制，下面就用Windows批处理命令来进行微信多开，具体代码命令如下：&#13;
```&#13;
@echo off&#13;
:list&#13;
color 0a&#13;
title '微信N开软件'&#13;
mode con cols=103 lines=30 &amp;color 0a&#13;
set /p N=请输入需要开多少个微信：&#13;
for /l %%a in (1,1,%N%) do start E:\1-绿化软件_windows\影音娱乐\WeChat_v2.6.4.38\WeChat\WeChat.exe&#13;
@echo ...&#13;
ping /n 5 127.1 &gt;nul&#13;
goto list&#13;
```&#13;
将上面代码复制粘贴在记事本中，然后另存为“微信N开程序”，文件类型选择“所有类型”，双击打开刚保存的程序文件，如下图所示：&#13;
&#13;
　　不会操作的直接直接链接下载：链接：https://pan.baidu.com/s/1SnkbRKFVQSxuTWohZDvnpQ 　　　　提取码：touo&#13;
![1](https://img2020.cnblogs.com/blog/2034475/202006/2034475-20200604093848852-16482228.png)&#13;
&#13;
输入你想要开启的微信数量，回车后就能开启多个微信了。</description><guid isPermaLink="true">https://xiykj.github.io/post/wei-xin-duo-kai-cheng-xu.html</guid><pubDate>Wed, 14 Aug 2024 14:25:34 +0000</pubDate></item><item><title>批处理For循环一键Update补丁程序</title><link>https://xiykj.github.io/post/pi-chu-li-For-xun-huan-yi-jian-Update-bu-ding-cheng-xu.html</link><description>Windows刚安装完系统后、有些软件必须要先update patch后才能进行软件安装，如果补丁一个个用手操作的话简直要feng了，现在通过Windows命令for循环来批量安装Windows补丁程序，又快又方便，释放自己的双手简直爽飞了，以下是Windows中for命令批量安装补丁程序代码：&#13;
```&#13;
@Echo Off&#13;
color 0a&#13;
Title Install Windows Update pack&#13;
Echo 正在安装Windows系统补丁，请稍等......&#13;
for %%i in (*.exe) do %%i /passive /norestart /nobackup&#13;
For %%F In (*.msu) Do Call :Update %%F&#13;
Shutdown.exe -r -t 30&#13;
Exit&#13;
:Update&#13;
Echo 现在Update补丁程序:      %1    安装完成&#13;
Start /Wait %1 /quiet /norestart&#13;
GoTo :EOF&#13;
Exit&#13;
```&#13;
将以上代码复制粘贴在记事本中，然后另存文件名称为：Windows_patch.bat，文件类型选择所有（注：.bat文件是Windows中的批处理程序）/不会操作的朋友在这里附上下载地址：https://pan.baidu.com/s/1ZH-62opziEeYwn5jskNblw 　提取码：w32c&#13;
&#13;
将下载的所有补丁程序和 Windows_patch.bat 文件放在同一个文件夹中，然后双击“Windows_patch.bat”文件运行程序。</description><guid isPermaLink="true">https://xiykj.github.io/post/pi-chu-li-For-xun-huan-yi-jian-Update-bu-ding-cheng-xu.html</guid><pubDate>Wed, 14 Aug 2024 14:21:21 +0000</pubDate></item><item><title>Windows查看端口被占用</title><link>https://xiykj.github.io/post/Windows-cha-kan-duan-kou-bei-zhan-yong.html</link><description>## Windows下查看哪个端口被哪些进程占用，有时候开启软件服务的时候提示端口占用。</description><guid isPermaLink="true">https://xiykj.github.io/post/Windows-cha-kan-duan-kou-bei-zhan-yong.html</guid><pubDate>Wed, 14 Aug 2024 13:41:39 +0000</pubDate></item><item><title>自学C语言_第一章</title><link>https://xiykj.github.io/post/zi-xue-C-yu-yan-_-di-yi-zhang.html</link><description>## 第一章：C语言的概述&#13;
&#13;
1.1  程序语言的叙述：程序是指可以被计算机连续执行的指令语句的集合。</description><guid isPermaLink="true">https://xiykj.github.io/post/zi-xue-C-yu-yan-_-di-yi-zhang.html</guid><pubDate>Wed, 14 Aug 2024 13:36:42 +0000</pubDate></item><item><title>小米MiFlash刷机报错售后方法参考</title><link>https://xiykj.github.io/post/xiao-mi-MiFlash-shua-ji-bao-cuo-shou-hou-fang-fa-can-kao.html</link><description>## [小米MiFlash刷机报错售后方法参考]&#13;
![1](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153333225-1535889002.png)&#13;
![2](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153406010-52473001.png)&#13;
![3](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153430914-779301716.png)&#13;
![4](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153446648-714422384.png)&#13;
![5](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153559917-213041290.png)&#13;
![6](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153537990-1733404413.png)&#13;
![7](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153625083-1356612607.png)&#13;
![8](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153638527-687907097.png)&#13;
![9](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153656663-815231839.png)&#13;
![10](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153710574-1341957698.png)&#13;
![11](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153724557-1977893416.png)&#13;
![12](https://img2020.cnblogs.com/blog/2034475/202005/2034475-20200514153746694-1005755567.png)。</description><guid isPermaLink="true">https://xiykj.github.io/post/xiao-mi-MiFlash-shua-ji-bao-cuo-shou-hou-fang-fa-can-kao.html</guid><pubDate>Wed, 14 Aug 2024 13:18:47 +0000</pubDate></item><item><title>Civil 3D 2012 CAD安装完成后打开报错“致命错误：Unhandled Delayload "D3DCOMPILER_47.dll"</title><link>https://xiykj.github.io/post/Civil%203D%202012%20CAD-an-zhuang-wan-cheng-hou-da-kai-bao-cuo-%E2%80%9C-zhi-ming-cuo-wu-%EF%BC%9AUnhandled%20Delayload%20-D3DCOMPILER_47.dll-.html</link><description> 今天在客户电脑上安装完cad 2012后打开cad显示报错：致命错误:Unhandled Delayload 'D3DCOMPILER-47.dll'&#13;
![1](https://img2020.cnblogs.com/blog/2034475/202012/2034475-20201207170056581-411438569.png)&#13;
查询原因是缺少微软的补丁KB4019990（文后将提供补丁的下载链接）；因为CAD软件启动时 'D3DCOMPILER_47.dll' 文件没有集成在系统中，所以微软原版系统刚安装完的时候并不是把所有的.dll文件都安装完全的，需要自己另外安装的即可解决问题。</description><guid isPermaLink="true">https://xiykj.github.io/post/Civil%203D%202012%20CAD-an-zhuang-wan-cheng-hou-da-kai-bao-cuo-%E2%80%9C-zhi-ming-cuo-wu-%EF%BC%9AUnhandled%20Delayload%20-D3DCOMPILER_47.dll-.html</guid><pubDate>Wed, 14 Aug 2024 12:57:31 +0000</pubDate></item><item><title>我为什么要写博客？写博客的初衷是什么？写博客能给我带来什么？</title><link>https://xiykj.github.io/post/wo-wei-shen-me-yao-xie-bo-ke-%EF%BC%9F-xie-bo-ke-de-chu-zhong-shi-shen-me-%EF%BC%9F-xie-bo-ke-neng-gei-wo-dai-lai-shen-me-%EF%BC%9F.html</link><description># 从2020年5月13日开始记录我的博客新篇章，记录人生中的轨迹在博客，开启我的新时代记忆&#13;
## 前言：&#13;
我为什么要写博客？写博客的初衷是什么？写博客能给我带来什么？&#13;
&#13;
　　　　1.其实原因很简单，就是在工作中需要解决IT运维所遇到的问题，查阅资料时发现别人的博客页面很酷（请不要嘲笑我，当时刚入IT行业，很多东西不是很懂），就有一种崇拜的心理，要是我也能有这样的博客多好啊！翻看了很多博客平台；有GitHub、网易、新浪、CSND、博客园。</description><guid isPermaLink="true">https://xiykj.github.io/post/wo-wei-shen-me-yao-xie-bo-ke-%EF%BC%9F-xie-bo-ke-de-chu-zhong-shi-shen-me-%EF%BC%9F-xie-bo-ke-neng-gei-wo-dai-lai-shen-me-%EF%BC%9F.html</guid><pubDate>Wed, 14 Aug 2024 12:41:43 +0000</pubDate></item><item><title>我的Github新博客测试，20240812</title><link>https://xiykj.github.io/post/wo-de-Github-xin-bo-ke-ce-shi-%EF%BC%8C20240812.html</link><description>我的Github新博客测试，20240812。</description><guid isPermaLink="true">https://xiykj.github.io/post/wo-de-Github-xin-bo-ke-ce-shi-%EF%BC%8C20240812.html</guid><pubDate>Mon, 12 Aug 2024 07:13:53 +0000</pubDate></item></channel></rss>